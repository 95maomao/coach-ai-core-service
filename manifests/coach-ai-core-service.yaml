# Secret
apiVersion: v1
kind: Secret
metadata:
  name: acr-registry-private
  namespace: default
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: ${ACR_SECRET}

---

# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coach-ai-core-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: coach-ai-core-service
  template:
    metadata:
      labels:
        app: coach-ai-core-service
    spec:
      imagePullSecrets:
        - name: acr-registry-private
      containers:
        - name: coach-ai-core-service
          image: ${IMAGE}
          ports:
            - containerPort: 8080
          env:
            # MySQL配置
            - name: MYSQL_HOST
              value: "47.112.214.8"
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_DATABASE
              value: "coach_ai"
            - name: MYSQL_USERNAME
              value: "root"
            - name: MYSQL_PASSWORD
              value: "test123456"
            # OSS配置
            - name: OSS_ENDPOINT
              value: "https://oss-cn-shenzhen.aliyuncs.com"
            - name: OSS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: oss-secret
                  key: access-key-id
            - name: OSS_ACCESS_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: oss-secret
                  key: access-key-secret
            - name: OSS_BUCKET_NAME
              value: "cri-537ixr7zm3jj17zu-registry"
            - name: OSS_REGION
              value: "cn-shenzhen"
            - name: OSS_SECURE
              value: "true"
            - name: OSS_CONNECTION_TIMEOUT
              value: "50000"
            - name: OSS_SOCKET_TIMEOUT
              value: "50000"
---

# LoadBalancer Service for external access
apiVersion: v1
kind: Service
metadata:
  name: coach-ai-core-service-lb
  namespace: default
spec:
  type: LoadBalancer
  selector:
    app: coach-ai-core-service
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http

