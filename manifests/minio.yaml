---
# MinIO Secret for access credentials
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: default
type: Opaque
data:
  # minioadmin (base64 encoded)
  access-key: bWluaW9hZG1pbg==
  # minioadmin123 (base64 encoded)
  secret-key: bWluaW9hZG1pbjEyMw==

---
# MinIO Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      imagePullSecrets:
        - name: acr-registry-private
      containers:
        - name: minio
          image: mz-acr-registry.cn-shenzhen.cr.aliyuncs.com/coach_ai/minio:latest
          command:
            - /bin/bash
            - -c
            - |
              # Create the data directory
              mkdir -p /data
              # Start MinIO server
              /usr/bin/minio server /data --console-address ":9001"
          ports:
            - containerPort: 9000
              name: api
            - containerPort: 9001
              name: console
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: access-key
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: secret-key
            - name: MINIO_BROWSER_REDIRECT_URL
              value: "http://localhost:9001"
          volumeMounts:
            - name: minio-storage
              mountPath: /data
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: minio-storage
          emptyDir: {}

---
# MinIO API Service
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: minio
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      name: api

---
# MinIO Console Service
apiVersion: v1
kind: Service
metadata:
  name: minio-console
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: minio
  ports:
    - port: 9001
      targetPort: 9001
      protocol: TCP
      name: console

---
# MinIO LoadBalancer Service for external access
apiVersion: v1
kind: Service
metadata:
  name: minio-lb
  namespace: default
spec:
  type: LoadBalancer
  selector:
    app: minio
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      name: api
    - port: 9001
      targetPort: 9001
      protocol: TCP
      name: console

---
# MinIO Client Job for initialization
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-init
  namespace: default
spec:
  template:
    spec:
      imagePullSecrets:
        - name: acr-registry-private
      containers:
        - name: minio-client
          image: mz-acr-registry.cn-shenzhen.cr.aliyuncs.com/coach_ai/mc:latest
          command:
            - /bin/bash
            - -c
            - |
              # Wait for MinIO to be ready
              until mc alias set minio http://minio:9000 minioadmin minioadmin123; do
                echo "Waiting for MinIO to be ready..."
                sleep 5
              done
              
              # Create the main bucket for CoachAI
              mc mb minio/coach-ai-files --ignore-existing
              
              # Create directory structure
              echo "Creating directory structure..."
              
              # Set bucket policy for public read (for development)
              mc anonymous set public minio/coach-ai-files
              
              echo "MinIO initialization completed successfully!"
          env:
            - name: MINIO_ROOT_USER
              value: "minioadmin"
            - name: MINIO_ROOT_PASSWORD
              value: "minioadmin123"
      restartPolicy: OnFailure
